# Generated by Django 4.2.7 on 2023-11-23 19:43

from django.db import migrations, models
import django.db.models.deletion
import etna.analytics.mixins
import etna.records.blocks
import modelcluster.contrib.taggit
import modelcluster.fields
import uuid
import wagtail.blocks
import wagtail.fields
import wagtail.images.blocks
import wagtail.snippets.blocks
import wagtailmetadata.models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("wagtailimages", "0025_alter_image_file_alter_rendition_file"),
        ("wagtailcore", "0089_log_entry_data_json_null_to_object"),
    ]

    operations = [
        migrations.CreateModel(
            name="ArticleTag",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=100, unique=True, verbose_name="name"),
                ),
                (
                    "slug",
                    models.SlugField(
                        allow_unicode=True,
                        max_length=100,
                        unique=True,
                        verbose_name="slug",
                    ),
                ),
                (
                    "skos_id",
                    models.CharField(
                        blank=True,
                        db_index=True,
                        help_text="Used as the identifier for this tag when sending page metatdata to the CIIM API.",
                        max_length=100,
                        unique=True,
                        verbose_name="SKOS identifier",
                    ),
                ),
            ],
            options={
                "verbose_name": "article tag",
                "verbose_name_plural": "article tags",
            },
        ),
        migrations.CreateModel(
            name="TaggedArticle",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "content_object",
                    modelcluster.fields.ParentalKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tagged_items",
                        to="wagtailcore.page",
                    ),
                ),
                (
                    "tag",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tagged_article",
                        to="articles.articletag",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="PageGalleryImage",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sort_order",
                    models.IntegerField(blank=True, editable=False, null=True),
                ),
                (
                    "alt_text",
                    models.CharField(
                        help_text='Alternative (alt) text describes images when they fail to load, and is read aloud by assistive technologies. Use a maximum of 100 characters to describe your image. <a href="https://html.spec.whatwg.org/multipage/images.html#alt" target="_blank">Check the guidance for tips on writing alt text</a>.',
                        max_length=100,
                        verbose_name="alternative text",
                    ),
                ),
                (
                    "caption",
                    wagtail.fields.RichTextField(
                        blank=True,
                        help_text="An optional caption, which will be displayed directly below the image. This could be used for image sources or for other useful metadata.",
                    ),
                ),
                (
                    "image",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="wagtailimages.image",
                    ),
                ),
                (
                    "page",
                    modelcluster.fields.ParentalKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="gallery_images",
                        to="wagtailcore.page",
                    ),
                ),
            ],
            options={
                "verbose_name": "gallery image",
                "verbose_name_plural": "gallery images",
                "ordering": ["sort_order"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ArticlePage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.page",
                    ),
                ),
                (
                    "teaser_text",
                    models.TextField(
                        help_text="A short, enticing description of this page. This will appear in promos and under thumbnails around the site.",
                        max_length=160,
                        verbose_name="teaser text",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        unique=True,
                        verbose_name="UUID",
                    ),
                ),
                (
                    "intro",
                    wagtail.fields.RichTextField(
                        help_text="1-2 sentences introducing the subject of the page, and explaining why a user should read on.",
                        max_length=300,
                        verbose_name="introductory text",
                    ),
                ),
                (
                    "display_content_warning",
                    models.BooleanField(
                        default=False,
                        verbose_name="display a content warning on this page",
                    ),
                ),
                (
                    "custom_warning_text",
                    wagtail.fields.RichTextField(
                        blank=True,
                        help_text="If specified, will be used for the content warning. Otherwise the default text will be used.",
                        verbose_name="custom content warning text (optional)",
                    ),
                ),
                (
                    "mark_new_on_next_publish",
                    models.BooleanField(
                        default=True,
                        help_text="This will set the 'new' label for 21 days",
                        verbose_name="mark this page as 'new' when published",
                    ),
                ),
                (
                    "newly_published_at",
                    models.DateField(
                        default=None,
                        editable=False,
                        null=True,
                        verbose_name="Page marked as new on",
                    ),
                ),
                (
                    "hero_image_caption",
                    wagtail.fields.RichTextField(
                        blank=True,
                        help_text="An optional caption for hero images. This could be used for image sources or for other useful metadata.",
                        verbose_name="hero image caption (optional)",
                    ),
                ),
                ("article_tag_names", models.TextField(editable=False, null=True)),
                (
                    "body",
                    wagtail.fields.StreamField(
                        [
                            (
                                "content_section",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "heading",
                                            wagtail.blocks.CharBlock(
                                                label="Heading", max_length=100
                                            ),
                                        ),
                                        (
                                            "content",
                                            wagtail.blocks.StreamBlock(
                                                [
                                                    (
                                                        "paragraph",
                                                        wagtail.blocks.StructBlock(
                                                            [
                                                                (
                                                                    "text",
                                                                    wagtail.blocks.RichTextBlock(
                                                                        features=[
                                                                            "bold",
                                                                            "italic",
                                                                            "link",
                                                                            "ol",
                                                                            "ul",
                                                                        ]
                                                                    ),
                                                                )
                                                            ]
                                                        ),
                                                    ),
                                                    (
                                                        "quote",
                                                        wagtail.blocks.StructBlock(
                                                            [
                                                                (
                                                                    "quote",
                                                                    wagtail.blocks.RichTextBlock(
                                                                        features=[
                                                                            "bold",
                                                                            "italic",
                                                                            "link",
                                                                        ],
                                                                        required=True,
                                                                    ),
                                                                ),
                                                                (
                                                                    "attribution",
                                                                    wagtail.blocks.CharBlock(
                                                                        max_length=100,
                                                                        required=False,
                                                                    ),
                                                                ),
                                                            ]
                                                        ),
                                                    ),
                                                    (
                                                        "sub_heading",
                                                        wagtail.blocks.StructBlock(
                                                            [
                                                                (
                                                                    "heading",
                                                                    wagtail.blocks.CharBlock(
                                                                        label="Sub-heading",
                                                                        max_length=100,
                                                                    ),
                                                                )
                                                            ]
                                                        ),
                                                    ),
                                                    (
                                                        "image",
                                                        wagtail.blocks.StructBlock(
                                                            [
                                                                (
                                                                    "image",
                                                                    wagtail.images.blocks.ImageChooserBlock(
                                                                        required=False
                                                                    ),
                                                                ),
                                                                (
                                                                    "alt_text",
                                                                    wagtail.blocks.CharBlock(
                                                                        help_text='Alternative (alt) text describes images when they fail to load, and is read aloud by assistive technologies. Use a maximum of 100 characters to describe your image. <a href="https://html.spec.whatwg.org/multipage/images.html#alt" target="_blank">Check the guidance for tips on writing alt text</a>.',
                                                                        label="Alternative text",
                                                                        max_length=100,
                                                                    ),
                                                                ),
                                                                (
                                                                    "caption",
                                                                    wagtail.blocks.RichTextBlock(
                                                                        features=[
                                                                            "bold",
                                                                            "italic",
                                                                            "link",
                                                                        ],
                                                                        help_text="If provided, displays directly below the image. Can be used to specify sources, transcripts or other useful metadata.",
                                                                        label="Caption (optional)",
                                                                        required=False,
                                                                    ),
                                                                ),
                                                            ]
                                                        ),
                                                    ),
                                                    (
                                                        "promoted_item",
                                                        wagtail.blocks.StructBlock(
                                                            [
                                                                (
                                                                    "title",
                                                                    wagtail.blocks.CharBlock(
                                                                        help_text="Title of the promoted page",
                                                                        label="Title",
                                                                        max_length=100,
                                                                    ),
                                                                ),
                                                                (
                                                                    "category",
                                                                    wagtail.blocks.ChoiceBlock(
                                                                        choices=[
                                                                            (
                                                                                "blog",
                                                                                "Blog post",
                                                                            ),
                                                                            (
                                                                                "podcast",
                                                                                "Podcast",
                                                                            ),
                                                                            (
                                                                                "video",
                                                                                "Video",
                                                                            ),
                                                                            (
                                                                                "video-external",
                                                                                "External video",
                                                                            ),
                                                                            (
                                                                                "external-link",
                                                                                "External link",
                                                                            ),
                                                                        ],
                                                                        label="Category",
                                                                    ),
                                                                ),
                                                                (
                                                                    "publication_date",
                                                                    wagtail.blocks.CharBlock(
                                                                        help_text="This is a free text field. Please enter date as per agreed format: 14 April 2021",
                                                                        required=False,
                                                                    ),
                                                                ),
                                                                (
                                                                    "author",
                                                                    wagtail.blocks.CharBlock(
                                                                        required=False
                                                                    ),
                                                                ),
                                                                (
                                                                    "duration",
                                                                    wagtail.blocks.CharBlock(
                                                                        help_text="Podcast or video duration.",
                                                                        label="Duration",
                                                                        max_length=50,
                                                                        required=False,
                                                                    ),
                                                                ),
                                                                (
                                                                    "url",
                                                                    wagtail.blocks.URLBlock(
                                                                        help_text="URL for the external page",
                                                                        label="External URL",
                                                                    ),
                                                                ),
                                                                (
                                                                    "target_blank",
                                                                    wagtail.blocks.BooleanBlock(
                                                                        label="Should this URL open in a new tab? <p style='font-size: 11px;'>Tick the box if 'yes'</p>",
                                                                        required=False,
                                                                    ),
                                                                ),
                                                                (
                                                                    "cta_label",
                                                                    wagtail.blocks.CharBlock(
                                                                        help_text="The text displayed on the button for your URL. If your URL links to an external site, please add the name of the site users will land on, and what they will find on this page. For example 'Watch our short film  <strong>about Shakespeare on YouTube</strong>'.",
                                                                        label="Call to action label",
                                                                        max_length=50,
                                                                    ),
                                                                ),
                                                                (
                                                                    "image",
                                                                    wagtail.blocks.StructBlock(
                                                                        [
                                                                            (
                                                                                "image",
                                                                                wagtail.images.blocks.ImageChooserBlock(
                                                                                    required=False
                                                                                ),
                                                                            ),
                                                                            (
                                                                                "decorative",
                                                                                wagtail.blocks.BooleanBlock(
                                                                                    default=False,
                                                                                    help_text='Decorative images are used for visual effect and do not add information to the content of a page. <a href="https://www.w3.org/WAI/tutorials/images/decorative/" target="_blank">"Check the guidance to see if your image is decorative</a>.',
                                                                                    label="Is this image decorative? <p class='field-title__subheading'>Tick the box if 'yes'</p>",
                                                                                    required=False,
                                                                                ),
                                                                            ),
                                                                            (
                                                                                "alt_text",
                                                                                wagtail.blocks.CharBlock(
                                                                                    help_text='Alternative (alt) text describes images when they fail to load, and is read aloud by assistive technologies. Use a maximum of 100 characters to describe your image. Decorative images do not require alt text. <a href="https://html.spec.whatwg.org/multipage/images.html#alt" target="_blank">Check the guidance for tips on writing alt text</a>.',
                                                                                    label="Image alternative text",
                                                                                    max_length=100,
                                                                                    required=False,
                                                                                ),
                                                                            ),
                                                                        ],
                                                                        label="Teaser image",
                                                                        template="articles/blocks/images/blog-embed__image-container.html",
                                                                    ),
                                                                ),
                                                                (
                                                                    "description",
                                                                    wagtail.blocks.RichTextBlock(
                                                                        features=[
                                                                            "bold",
                                                                            "italic",
                                                                            "link",
                                                                        ],
                                                                        help_text="A description of the promoted page",
                                                                    ),
                                                                ),
                                                            ]
                                                        ),
                                                    ),
                                                    (
                                                        "promoted_list",
                                                        wagtail.blocks.StructBlock(
                                                            [
                                                                (
                                                                    "category",
                                                                    wagtail.snippets.blocks.SnippetChooserBlock(
                                                                        "categories.Category"
                                                                    ),
                                                                ),
                                                                (
                                                                    "summary",
                                                                    wagtail.blocks.RichTextBlock(
                                                                        features=[
                                                                            "bold",
                                                                            "italic",
                                                                            "link",
                                                                        ],
                                                                        required=False,
                                                                    ),
                                                                ),
                                                                (
                                                                    "promoted_items",
                                                                    wagtail.blocks.ListBlock(
                                                                        wagtail.blocks.StructBlock(
                                                                            [
                                                                                (
                                                                                    "title",
                                                                                    wagtail.blocks.CharBlock(
                                                                                        help_text="The title of the target page",
                                                                                        max_length=100,
                                                                                        required=True,
                                                                                    ),
                                                                                ),
                                                                                (
                                                                                    "description",
                                                                                    wagtail.blocks.RichTextBlock(
                                                                                        features=[
                                                                                            "bold",
                                                                                            "italic",
                                                                                            "link",
                                                                                        ],
                                                                                        help_text="A description of the target page",
                                                                                        required=False,
                                                                                    ),
                                                                                ),
                                                                                (
                                                                                    "url",
                                                                                    wagtail.blocks.URLBlock(
                                                                                        required=True
                                                                                    ),
                                                                                ),
                                                                            ]
                                                                        )
                                                                    ),
                                                                ),
                                                            ]
                                                        ),
                                                    ),
                                                    (
                                                        "record_links",
                                                        wagtail.blocks.StructBlock(
                                                            [
                                                                (
                                                                    "items",
                                                                    wagtail.blocks.ListBlock(
                                                                        etna.records.blocks.RecordLinkBlock,
                                                                        label="Items",
                                                                    ),
                                                                )
                                                            ]
                                                        ),
                                                    ),
                                                ],
                                                required=False,
                                            ),
                                        ),
                                    ]
                                ),
                            )
                        ],
                        blank=True,
                        null=True,
                        use_json_field=True,
                    ),
                ),
                (
                    "hero_image",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="wagtailimages.image",
                    ),
                ),
                (
                    "search_image",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="wagtailimages.image",
                        verbose_name="Search image",
                    ),
                ),
                (
                    "tags",
                    modelcluster.contrib.taggit.ClusterTaggableManager(
                        blank=True,
                        help_text="A comma-separated list of tags.",
                        through="articles.TaggedArticle",
                        to="articles.ArticleTag",
                        verbose_name="Tags",
                    ),
                ),
                (
                    "teaser_image",
                    models.ForeignKey(
                        blank=True,
                        help_text="Image that will appear on thumbnails and promos around the site.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="wagtailimages.image",
                    ),
                ),
            ],
            options={
                "verbose_name": "article",
                "verbose_name_plural": "articles",
            },
            bases=(
                wagtailmetadata.models.WagtailImageMetadataMixin,
                etna.analytics.mixins.DataLayerMixin,
                "wagtailcore.page",
                models.Model,
            ),
        ),
    ]
